cmake_minimum_required(VERSION 3.10)

project(YourProjectName)

set(CMAKE_CXX_STANDARD 17)
set(CMAKE_CXX_STANDARD_REQUIRED True)

set(CMAKE_RUNTIME_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/bin)

set(CMAKE_EXE_LINKER_FLAGS "${CMAKE_EXE_LINKER_FLAGS} -static-libgcc -static-libstdc++")

set(SOURCES
    src/main.cpp
    src/Application.cpp
    src/EngineUI.cpp
    src/luaSupport.cpp
    src/Rendering/renderer.cpp
    src/Rendering/camera.cpp
    src/Rendering/model.cpp
    src/Rendering/mesh.cpp
    src/Rendering/shader.cpp
    src/Rendering/Objects/gameObject.cpp
    src/Rendering/Objects/pointLight.cpp
    src/Rendering/Objects/spotLight.cpp
    src/External/glad.c
    src/texture_util.cpp
    src/External/stb_image.cpp
    src/External/imgui/imgui.cpp
    src/External/imgui/imgui_demo.cpp
    src/External/imgui/imgui_draw.cpp
    src/External/imgui/imgui_tables.cpp
    src/External/imgui/imgui_widgets.cpp
    src/External/imgui/backends/imgui_impl_glfw.cpp
    src/External/imgui/backends/imgui_impl_opengl3.cpp
)

include_directories(
    src
    src/include
    src/External
    src/External/imgui
    src/External/imgui/backends
    /mingw64/include/KHR
    /mingw64/include/GLFW
    /mingw64/include/glad
    /mingw64/include/glm
    /mingw64/include/assimp
    /mingw64/include/lua
)

link_directories(lib /mingw64/lib)
find_library(GLFW3_LIB glfw3 HINTS /mingw64/lib)
find_library(OPENGL32_LIB opengl32 HINTS /mingw64/lib)
find_library(GDI32_LIB gdi32 HINTS /mingw64/lib)
find_library(PTHREAD_LIB pthread HINTS /mingw64/lib)
find_library(ASSIMP_LIB assimp HINTS /mingw64/lib)
find_library(LUA_LIB lua HINTS /mingw64/lib)

add_executable(main ${SOURCES})

target_link_libraries(main PRIVATE stdc++fs
    ${GLFW3_LIB}
    ${OPENGL32_LIB}
    ${GDI32_LIB}
    ${PTHREAD_LIB}
    ${ASSIMP_LIB}
    ${LUA_LIB}
)

if (WIN32)
    target_link_options(main PRIVATE "-mwindows")
endif()

if (CMAKE_COMPILER_IS_GNUCXX)
    add_compile_options(-Wno-unknown-pragmas)
endif()